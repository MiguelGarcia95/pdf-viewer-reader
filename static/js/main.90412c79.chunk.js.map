{"version":3,"sources":["components/OnClickBtn/index.jsx","components/Options/index.jsx","components/Welcome/index.jsx","components/App.js","index.js"],"names":["OnClickBtn","onBtnClick","btnText","btnIcon","className","onClick","Options","previousPage","nextPage","loadPdf","uploadPdf","onPageSubmit","zoomPage","scale","pdfDoc","Fragment","console","log","id","type","name","onChange","placeholder","onKeyDown","pdfjsLib","window","App","pageNum","state","setState","pageIsRendering","pageNumIsPending","renderPage","pageCount","url","a","getDocument","promise","numPages","error","e","newPage","Number","target","value","keyCode","canvas","document","getElementById","getPage","page","viewport","getViewport","height","width","renderCtx","canvasContext","getContext","render","element","file","files","URL","createObjectURL","this","Welcome","React","Component","ReactDOM"],"mappings":"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","file":"static/js/main.90412c79.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nfunction OnClickBtn({onBtnClick, btnText = '', btnIcon, className}) {\r\n  return (\r\n    <button className={className} onClick={onBtnClick} >\r\n      <p>{btnText} <i className={btnIcon}></i></p>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default OnClickBtn\r\n","import React from 'react';\r\nimport OnClickBtn from '../OnClickBtn';\r\nimport './style.css';\r\n\r\nfunction Options({previousPage, nextPage, loadPdf, uploadPdf, onPageSubmit, zoomPage, scale, pdfDoc}) {\r\n  return (\r\n    <section className={`options-bar ${pdfDoc ? 'open' : 'close'}`}>\r\n      <section className={`container ${pdfDoc ? 'open' : 'close'}`}>\r\n        {pdfDoc ? (\r\n          <React.Fragment>\r\n            <OnClickBtn className='btn sm' onBtnClick={() => zoomPage(scale + 0.1)} btnIcon='fas fa-search-plus' />\r\n            <OnClickBtn className='btn sm' onBtnClick={() => zoomPage(1.5)} btnIcon='fas fa-search' />\r\n            <OnClickBtn className='btn sm' onBtnClick={() => zoomPage(scale - 0.1)} btnIcon='fas fa-search-minus' />\r\n            <OnClickBtn className='btn sm' onBtnClick={() => previousPage()} btnIcon='fas fa-chevron-circle-left' />\r\n            <OnClickBtn className='btn sm' onBtnClick={() => nextPage()} btnIcon='fas fa-chevron-circle-right' />\r\n            <OnClickBtn className='btn sm' onBtnClick={() => console.log('save bookmark')} btnIcon='fas fa-bookmark' />\r\n            <section className=\"uploadContainer btn\">\r\n              <input id='uploadedPdf' type='file' name='file' onChange={() => uploadPdf('uploadedPdf')} />\r\n              <p> Upload Anothe File <i className=\"fas fa-file-upload\"></i></p>\r\n            </section>\r\n            <section className='btn btn-pg-search md'>\r\n              <input placeholder='Go To Page' onKeyDown={onPageSubmit} />\r\n            </section>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <OnClickBtn className='btn md' onBtnClick={() => loadPdf('sample/sample.pdf')} btnText='Sample PDF' btnIcon='fas fa-file-pdf' />\r\n            <section className=\"uploadContainer btn md\">\r\n              <input id='uploadedPdf' type='file' name='file' onChange={() => uploadPdf('uploadedPdf')} />\r\n              <p> Upload <i className=\"fas fa-file-upload\"></i></p>\r\n            </section>\r\n          </React.Fragment>\r\n        )}\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Options({uploadPdf, pdfDoc, loadPdf}) {\r\n  return (\r\n    <section className={`welcome ${pdfDoc ? 'close' : 'open'}`}>\r\n      <section className=\"welcome-btn upload\">\r\n        <input id='uploadedPdfw' type='file' name='file' onChange={() => uploadPdf('uploadedPdfw')} />\r\n        <p> Upload <i className=\"fas fa-file-upload\"></i></p>\r\n      </section>\r\n      <section className='welcome-btn load' >\r\n        <p onClick={() => loadPdf('sample/sample.pdf')} >Load Sample PDF</p>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","import React from 'react';\nimport Options from './Options';\nimport Welcome from './Welcome';\nimport './styles/style.css';\n\nconst pdfjsLib = window.pdfjsLib\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      url: '',\n      pdfDoc: null,\n      pageNum: 1,\n      pageCount: '',\n      pageIsRendering: false,\n      pageNumIsPending: null,\n      scale: 1.5,\n      error: '',\n    }\n  }\n\n  previousPage = () => {\n    let {pageNum} = this.state;\n    if (pageNum <= 1) return;\n    pageNum--;\n\n    this.setState({pageNum});\n    if (this.state.pageIsRendering) {\n      this.setState({pageNumIsPending: false});\n    } else {\n      this.renderPage(pageNum);\n    }\n  }\n\n  nextPage = () => {    \n    let {pageNum} = this.state;\n    if (pageNum >= this.state.pageCount) return;\n    pageNum++;\n\n    this.setState({pageNum});\n    if (this.state.pageIsRendering) {\n      this.setState({pageNumIsPending: false});\n    } else {\n      this.renderPage(pageNum);\n    }\n  }\n\n  loadPdf = async (url) => {\n    try {\n      const pdfDoc = await pdfjsLib.getDocument(url).promise;\n      this.setState({\n        pageCount: pdfDoc.numPages,\n        pdfDoc: pdfDoc\n      })\n      this.renderPage(this.state.pageNum)\n    } catch (error) {\n      this.setState({error})\n    }\n  }\n\n  onPageSubmit = e => {\n    let newPage = Number(e.target.value);\n    if (e.keyCode === 13 && newPage) {\n      if (newPage >= 1 && newPage <= this.state.pageCount) {\n        this.renderPage(newPage);\n        this.setState({pageNum: newPage});\n      }\n    }\n  }\n\n  zoomPage = (scale) => {\n    this.setState({scale});\n    this.renderPage(this.state.pageNum);\n  }\n\n  renderPage = async pageNum => {\n    const canvas = document.getElementById('pdf-render');\n    this.setState({pageIsRendering: true});\n\n    try {\n      const page = await this.state.pdfDoc.getPage(pageNum);\n      const viewport = page.getViewport({scale: this.state.scale})\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      const renderCtx = {\n        canvasContext: canvas.getContext('2d'),\n        viewport: viewport\n      }\n      \n      await page.render(renderCtx).promise\n      // page render false\n      this.setState({pageIsRendering: false});\n      if (this.state.pageNumIsPending !== null) {\n        this.renderPage(this.state.pageNumIsPending);\n        this.setState({pageNumIsPending: null});\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  uploadPdf = element => {\n    const file = document.getElementById(element).files[0]\n    const url = URL.createObjectURL(file);\n    this.setState({url});\n    this.loadPdf(url);\n  }\n\n  render() {\n    // add bookmark option\n    // make it pwa\n    return (\n      <div className='app'>\n        <Options \n          previousPage={this.previousPage} \n          nextPage={this.nextPage} \n          loadPdf={this.loadPdf} \n          uploadPdf={this.uploadPdf} \n          onPageSubmit={this.onPageSubmit} \n          zoomPage={this.zoomPage}\n          scale={this.state.scale}\n          pdfDoc={this.state.pdfDoc}\n        />\n        {this.state.pageIsRendering && <h2>Loading</h2>}\n        {this.state.pdfDoc ? (\n          <section className=\"pages\">\n            <p>Page <span id=\"page-num\">{this.state.pageNum}</span> of <span id=\"page-count\">{this.state.pageCount}</span></p>\n          </section>\n        ) : (\n          <Welcome pdfDoc={this.state.pdfDoc} loadPdf={this.loadPdf} uploadPdf={this.uploadPdf} />\n        )}\n        <canvas id=\"pdf-render\"></canvas>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}